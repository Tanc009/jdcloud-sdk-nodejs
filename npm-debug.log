0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'publish' ]
2 info using npm@3.10.10
3 info using node@v6.11.3
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/root/jdcloud-sdk-nodejs',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /root/.npm/jdcloud-sdk-js/1.2.35/package.tgz not in flight; packing
9 verbose correctMkdir /root/.npm correctMkdir not in flight; initializing
10 info lifecycle jdcloud-sdk-js@1.2.35~prepublish: jdcloud-sdk-js@1.2.35
11 silly lifecycle jdcloud-sdk-js@1.2.35~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/root/.npm/jdcloud-sdk-js/1.2.35/package.tgz',
12 verbose tar pack   '/root/jdcloud-sdk-nodejs' ]
13 verbose tarball /root/.npm/jdcloud-sdk-js/1.2.35/package.tgz
14 verbose folder /root/jdcloud-sdk-nodejs
15 verbose addLocalTarball adding from inside cache /root/.npm/jdcloud-sdk-js/1.2.35/package.tgz
16 verbose correctMkdir /root/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd jdcloud-sdk-js@1.2.35
18 verbose afterAdd /root/.npm/jdcloud-sdk-js/1.2.35/package/package.json not in flight; writing
19 verbose correctMkdir /root/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /root/.npm/jdcloud-sdk-js/1.2.35/package/package.json written
21 silly publish { name: 'jdcloud-sdk-js',
21 silly publish   version: '1.2.35',
21 silly publish   description: 'jdcloud openApi sdk',
21 silly publish   main: 'src/jdcloud.js',
21 silly publish   scripts:
21 silly publish    { test: 'cross-env NODE_CONFIG_DIR=./test/config  mocha --recursive --require babel-register',
21 silly publish      dev: 'babel src --out-dir babel -w' },
21 silly publish   author: '',
21 silly publish   license: 'Apache',
21 silly publish   dependencies:
21 silly publish    { 'babel-register': '^6.26.0',
21 silly publish      buffer: '^5.0.8',
21 silly publish      'create-hash': '^1.1.3',
21 silly publish      'create-hmac': '^1.1.6',
21 silly publish      debug: '^3.1.0',
21 silly publish      'node-fetch': '^2.1.2',
21 silly publish      querystring: '^0.2.0',
21 silly publish      url: '^0.11.0',
21 silly publish      uuid: '^3.1.0' },
21 silly publish   devDependencies:
21 silly publish    { mocha: '^5.0.0',
21 silly publish      chai: '^4.1.2',
21 silly publish      'babel-cli': '^6.26.0',
21 silly publish      'babel-preset-env': '^1.6.1',
21 silly publish      config: '^1.30.0',
21 silly publish      'cross-env': '^5.1.4',
21 silly publish      'js-yaml': '^3.11.0' },
21 silly publish   engines: { node: '>= 8.6.0', npm: '>= 5.6.0' },
21 silly publish   browserslist: [ '> 1%', 'last 2 versions', 'not ie <= 9' ],
21 silly publish   standard:
21 silly publish    { env: [ 'node', 'mocha', 'browser' ],
21 silly publish      globals: [ 'Request', 'Headers', 'fetch' ] },
21 silly publish   readme: '---\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\n# 简介 #\n  欢迎使用京东云开发者Node.js工具套件（Node.js SDK）。使用京东云Node.js SDK，您无需复杂编程就可以访问京东云提供的各种服务。 \n\n  为了方便您理解SDK中的一些概念和参数的含义，使用SDK前建议您先查看[京东云OpenAPI使用入门](http://www.jdcloud.com/help/detail/355/isCatalog/0)。要了解每个API的具体参数和含义，请参考程序注释或参考OpenAPI&SDK下具体产品线的API文档。\n\n\n\n# 环境准备 #\n 1.京东云Node.js SDK适用于Node.js 8.6.0及以上，npm 5.6.0及以上。\n\n 2.在开始调用京东云open API之前，需提前在京东云用户中心账户管理下的[AccessKey管理页面](https://uc.jdcloud.com/accesskey/index)申请accesskey和secretKey密钥对（简称AK/SK）。AK/SK信息请妥善保管，如果遗失可能会造成非法用户使用此信息操作您在云上的资源，给你造成数据和财产损失。\n\n\n\n# SDK使用方法 #\n建议使用npm安装京东云Node.js SDK，如下所示： \n\nnpm install jdcloud-sdk-js\n\n \n\n您还可以下载sdk源代码自行使用，[源代码地址](https://github.com/jdcloud-api/jdcloud-sdk-nodejs)。\n\n \n\nSDK使用中的任何问题，欢迎您在[SDK使用问题反馈页面](https://github.com/jdcloud-api/jdcloud-sdk-nodejs/issues)交流。\n\n\n\n注意：京东云并没有提供其他下载方式，请务必使用上述官方下载方式！\n\n \n\n# 调用SDK #\n\n## 两种引用方式 ##\n\tvar JDCloud = require(\'jdcloud-sdk-js\');\n\n这种引用方式会加载所有的可用的services\n\n\n\n\tvar NC = require(\'jdcloud-sdk-js/services/nativecontainer\');\n\n这种引用方式只会加载用到的service，此时仍然可以使用var JDCloud = require(\'jdcloud-sdk-js/global\')来引用JDCloud对象\n\n## 配置方法  ##\n\n对JDCloud的配置为通用配置，所有services共享配置:\n\n\tJDCloud.config.update({//*配置项/*/});\n\n对某个service的配置会覆盖通用配置：\n\n\tvar NC = require(\'jdcloud-sdk-js/services/nativecontainer\'); \n\tvar nc = new NATIVECONTAINER({//*配置项/*/});\n\n\n## 配置项 ##\n\n\tlet config = { \n\t\tcredentials: { \n\t\t\taccessKeyId: global.accessKeyId, secretAccessKey: global.secretAccessKey \n\t\t},\n\t\tregionId: \'cn-north-1\' //地域信息，某个api调用可以单独传参regionId，如果不传则会使用此配置中的regionId \n\t}\n\n\n## 调用示例 ##\n\n以下是查询单个云主机实例详情的调用示例\n\n\n###  引用和配置  ###\n\n    var VM = require(\'jdcloud-sdk-js/services/vm\')\n    var vm = new VM({\n            credentials: {\n        accessKeyId: global.accessKeyId,\n                secretAccessKey: global.secretAccessKey\n    },\n    regionId: \'cn-north-1\'\n    })\n\n\n\n### Promise方式调用 ####\n\n\tvm.createInstances({\n        instanceSpec: {\n            instanceType: \'g.s1.micro\',\n                    az: \'cn-north-1a\',\n                    imageId: \'98d44a0f-88c1-451a-8971-f1f769073b6c\',\n                    name: \'node-sdk-test\',\n                    elasticIp: {\n                bandwidthMbps: 2, provider: \'BGP\'\n            },\n            primaryNetworkInterface: {\n                networkInterface: {\n                    subnetId: \'subnet-3dm13k30gh\',\n                            az: \'cn-north-1a\'\n                }\n            },\n            systemDisk: {\n                diskCategory: \'local\'\n            },\n            description: \'sdk\'\n        },\n        maxCount: 1\n    },\'cn-north-1\').then(function(data){ // 返回数据处理 data \n    },\n    function(e){ // 调用API失败，错误处理 \n    })\n\n\n\n### callback方式调用 ###\n\n\tvm.createInstances({\n        instanceSpec: {\n            instanceType: \'g.s1.micro\',\n                    az: \'cn-north-1a\',\n                    imageId: \'98d44a0f-88c1-451a-8971-f1f769073b6c\',\n                    name: \'node-sdk-test\',\n                    elasticIp: {\n                bandwidthMbps: 2,\n                        provider: \'BGP\'\n            },\n            primaryNetworkInterface: {\n                networkInterface: {\n                    subnetId: \'subnet-3dm13k30gh\',\n                            az: \'cn-north-1a\'\n                }\n            },\n            systemDisk: {\n                diskCategory: \'local\'\n            },\n            description: \'sdk\'\n        },\n        maxCount: 1\n    },\'cn-north-1\',\n    function(err, data){\n        if(err){ // 调用API失败，错误处理 \n        } \n\t\telse { // 返回数据处理 data \n        } \n    })\n\n如果需要设置访问点，配置超时,额外请求头等，请参考如下更复杂的例子：\n\n```\n    var nc = new NATIVECONTAINER({\n        credentials: {\n            accessKeyId: global.accessKeyId,\n            secretAccessKey: global.secretAccessKey\n        },\n        endpoint: {\n            host: \'nativecontainer.internal.cn-north-1.jdcloud-api.com\', //指定非默认Endpoint\n            protocol: \'http\' //设置使用HTTP而不是HTTPS，vpc专用域名不支持HTTPS\n        },\n        \'x-extra-header\': { //指定额外header\n            "x-jdcloud-security-token" : "xxx", //要调用开启了MFA操作保护的接口需要传递\n            "x-jdcloud-content-sha256" : "xxx", //body过大，希望用此value替代对body进行哈希的过程\n            "MyOwn" : "xxx"\n        },\n        version: {\n            nativecontainer: \'v1\'\n        }\n    })\n```\n    \n\n更多调用示例参考  [SDK使用Demo](https://github.com/jdcloud-api/jdcloud-sdk-nodejs/tree/master/test)\n\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '68ff86423fd28d7a194988b4a6517a7e05f93969',
21 silly publish   _id: 'jdcloud-sdk-js@1.2.35',
21 silly publish   _shasum: 'ca91de5ce6c53683ade02e17ce19953365ec075d',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name jdcloud-sdk-js
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'jdcloud-sdk-js',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'jdcloud-sdk-js',
26 silly mapToRegistry   name: 'jdcloud-sdk-js',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/jdcloud-sdk-js
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /root/.npm/jdcloud-sdk-js/1.2.35/package.tgz
30 verbose request uri https://registry.npmjs.org/jdcloud-sdk-js
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 6:15:52 AM
33 verbose request using bearer token for auth
34 verbose request id a5bf87bb3dd9232b
35 http request PUT https://registry.npmjs.org/jdcloud-sdk-js
36 http 403 https://registry.npmjs.org/jdcloud-sdk-js
37 verbose headers { date: 'Thu, 24 Oct 2019 06:16:13 GMT',
37 verbose headers   'content-type': 'application/json',
37 verbose headers   'transfer-encoding': 'chunked',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'set-cookie': [ '__cfduid=d99013eac4266be2af9ee8af100499d7e1571897772; expires=Fri, 23-Oct-20 06:16:12 GMT; path=/; domain=.npmjs.org; HttpOnly' ],
37 verbose headers   'cf-cache-status': 'DYNAMIC',
37 verbose headers   'cf-ray': '52a9d2147ed29605-SJC',
37 verbose headers   'expect-ct': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
37 verbose headers   vary: 'Accept-Encoding',
37 verbose headers   server: 'cloudflare',
37 verbose headers   'content-encoding': 'gzip' }
38 verbose request invalidating /root/.npm/registry.npmjs.org/jdcloud-sdk-js on PUT
39 error publish Failed PUT 403
40 verbose stack Error: You cannot publish over the previously published versions: 1.2.35. : jdcloud-sdk-js
40 verbose stack     at makeError (/usr/lib/node_modules/npm/node_modules.bundled/npm-registry-client/lib/request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/lib/node_modules/npm/node_modules.bundled/npm-registry-client/lib/request.js:290:14)
40 verbose stack     at /usr/lib/node_modules/npm/node_modules.bundled/npm-registry-client/lib/request.js:216:7
40 verbose stack     at Gunzip.onEnd (zlib.js:227:5)
40 verbose stack     at emitNone (events.js:91:20)
40 verbose stack     at Gunzip.emit (events.js:185:7)
40 verbose stack     at endReadableNT (_stream_readable.js:974:12)
40 verbose stack     at _combinedTickCallback (internal/process/next_tick.js:80:11)
40 verbose stack     at process._tickCallback (internal/process/next_tick.js:104:9)
41 verbose statusCode 403
42 verbose pkgid jdcloud-sdk-js
43 verbose cwd /root/jdcloud-sdk-nodejs
44 error Linux 3.10.0-514.21.2.el7.x86_64
45 error argv "/usr/bin/node" "/usr/bin/npm" "publish"
46 error node v6.11.3
47 error npm  v3.10.10
48 error code E403
49 error You cannot publish over the previously published versions: 1.2.35. : jdcloud-sdk-js
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
